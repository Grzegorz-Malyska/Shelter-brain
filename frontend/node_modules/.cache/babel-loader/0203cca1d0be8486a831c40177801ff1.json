{"ast":null,"code":"import _defineProperty from \"/home/gjm/Pulpit/Shelter-brain/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/gjm/Pulpit/Shelter-brain/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gjm/Pulpit/Shelter-brain/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gjm/Pulpit/Shelter-brain/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gjm/Pulpit/Shelter-brain/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gjm/Pulpit/Shelter-brain/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/gjm/Pulpit/Shelter-brain/frontend/src/components/auth/AccountRegistrationForm.js\";\nimport React from \"react\";\nimport DismissableAlert from \"../../utils/DismissableAlert\";\nimport axios from \"axios\";\nimport Config from \"../../Config\";\n\nvar AccountRegistrationForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AccountRegistrationForm, _React$Component);\n\n  function AccountRegistrationForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AccountRegistrationForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AccountRegistrationForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: \"\",\n      password: \"\",\n      email: \"\",\n      base64Image: \"\",\n      errorMessage: null,\n      successMessage: null\n    };\n\n    _this.genericOnChangeEventHandler = function (e) {\n      return _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.onRegistration = function (e) {\n      e.preventDefault(); // check for one-word name\n\n      if (_this.state.name.match(/\\b\\w+\\b/g) > 1) {\n        _this.setState({\n          errorMessage: \"Login musi być jednowyrazowy!\"\n        });\n\n        return;\n      }\n\n      e.target.reset();\n      axios.post(\"\".concat(Config.AJAX_BASE_URL, \"/accounts\"), {\n        name: _this.state.name,\n        password: _this.state.password,\n        email: _this.state.email,\n        base64Image: _this.state.base64Image\n      }).then(function () {\n        return _this.setState({\n          successMessage: \"Pomy\\u015Blnie zarejestrowano pracownika \".concat(_this.state.name)\n        });\n      }).catch(function (err) {\n        return _this.setState({\n          errorMessage: err.response !== undefined ? err.response.data : \"Brak połączenia z serwerem!\"\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AccountRegistrationForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var randomValueForId = Math.round(Math.random() * 100);\n      return React.createElement(\"div\", {\n        style: {\n          padding: \"20px\",\n          border: \"4px black solid\",\n          borderRadius: \"8px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Zarejestruj si\\u0119 jako pracownik schroniska!\"), React.createElement(\"form\", {\n        onSubmit: this.onRegistration,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name_\".concat(randomValueForId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Nazwa/login\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        className: \"form-control\",\n        id: \"name_\".concat(randomValueForId),\n        onChange: this.genericOnChangeEventHandler,\n        required: true,\n        placeholder: \"Wpisz sw\\xF3j login...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"password_\".concat(randomValueForId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Has\\u0142o\"), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        className: \"form-control\",\n        id: \"password_\".concat(randomValueForId),\n        onChange: this.genericOnChangeEventHandler,\n        required: true,\n        placeholder: \"Wpisz swoje has\\u0142o...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email_\".concat(randomValueForId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        className: \"form-control\",\n        id: \"email_\".concat(randomValueForId),\n        onChange: this.genericOnChangeEventHandler,\n        required: true,\n        placeholder: \"Wpisz sw\\xF3j email...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"image_\".concat(randomValueForId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Zdj\\u0119cie profilowe\"), React.createElement(\"input\", {\n        required: true,\n        type: \"file\",\n        className: \"form-control-file\",\n        id: \"image_\".concat(randomValueForId),\n        accept: \"image/png\",\n        onChange: function onChange(e) {\n          var file = e.target.files[0];\n\n          if (file.type !== \"image/png\") {\n            _this2.setState({\n              errorMessage: \"Z\\u0142y format zdj\\u0119cia profilowego (\".concat(file.type, \" zamiast png)\")\n            });\n\n            e.target.value = \"\";\n            return;\n          }\n\n          var fileReader = new FileReader();\n          fileReader.readAsBinaryString(file);\n\n          fileReader.onload = function () {\n            return _this2.setState({\n              base64Image: btoa(fileReader.result)\n            });\n          };\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Rejestracja\"), this.state.errorMessage !== null && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(DismissableAlert, {\n        key: Math.random(),\n        color: \"danger\",\n        timeout: 3,\n        toggle: function toggle() {\n          return _this2.setState({\n            errorMessage: null\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.state.errorMessage)), this.state.successMessage !== null && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(DismissableAlert, {\n        key: Math.random(),\n        color: \"success\",\n        timeout: 3,\n        toggle: function toggle() {\n          return _this2.setState({\n            successMessage: null\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, this.state.successMessage))));\n    }\n  }]);\n\n  return AccountRegistrationForm;\n}(React.Component);\n\nexport default AccountRegistrationForm;","map":{"version":3,"sources":["/home/gjm/Pulpit/Shelter-brain/frontend/src/components/auth/AccountRegistrationForm.js"],"names":["React","DismissableAlert","axios","Config","AccountRegistrationForm","state","name","password","email","base64Image","errorMessage","successMessage","genericOnChangeEventHandler","e","setState","target","value","onRegistration","preventDefault","match","reset","post","AJAX_BASE_URL","then","catch","err","response","undefined","data","randomValueForId","Math","round","random","padding","border","borderRadius","file","files","type","fileReader","FileReader","readAsBinaryString","onload","btoa","result","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport DismissableAlert from \"../../utils/DismissableAlert\";\nimport axios from \"axios\";\nimport Config from \"../../Config\";\n\nclass AccountRegistrationForm extends React.Component {\n    state = {\n        name: \"\",\n        password: \"\",\n        email: \"\",\n        base64Image: \"\",\n\n        errorMessage: null,\n        successMessage: null\n    };\n\n    genericOnChangeEventHandler = e => this.setState({[e.target.name]: e.target.value});\n\n    onRegistration = e => {\n        e.preventDefault();\n\n        // check for one-word name\n        if(this.state.name.match(/\\b\\w+\\b/g) > 1) {\n            this.setState({errorMessage: \"Login musi być jednowyrazowy!\"});\n            return;\n        }\n\n        e.target.reset();\n\n        axios.post(`${Config.AJAX_BASE_URL}/accounts`, {\n            name: this.state.name,\n            password: this.state.password,\n            email: this.state.email,\n            base64Image: this.state.base64Image\n        })\n            .then(() => this.setState({\n                successMessage: `Pomyślnie zarejestrowano pracownika ${this.state.name}`\n            }))\n            .catch(err => this.setState({\n                errorMessage: err.response !== undefined ? err.response.data : \"Brak połączenia z serwerem!\"\n            }));\n    };\n\n    render() {\n        const randomValueForId = Math.round(Math.random() * 100);\n\n        return (\n            <div style={{padding: \"20px\", border: \"4px black solid\", borderRadius: \"8px\"}}>\n                <h3>Zarejestruj się jako pracownik schroniska!</h3>\n                <form onSubmit={this.onRegistration}>\n                    <div className=\"form-group\">\n                        <label htmlFor={`name_${randomValueForId}`}>Nazwa/login</label>\n                        <input type=\"text\" name=\"name\" className=\"form-control\" id={`name_${randomValueForId}`} onChange={this.genericOnChangeEventHandler}\n                            required={true} placeholder=\"Wpisz swój login...\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor={`password_${randomValueForId}`}>Hasło</label>\n                        <input type=\"password\" name=\"password\" className=\"form-control\" id={`password_${randomValueForId}`} onChange={this.genericOnChangeEventHandler}\n                            required={true} placeholder=\"Wpisz swoje hasło...\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor={`email_${randomValueForId}`}>Email</label>\n                        <input type=\"email\" name=\"email\" className=\"form-control\" id={`email_${randomValueForId}`} onChange={this.genericOnChangeEventHandler}\n                            required={true} placeholder=\"Wpisz swój email...\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor={`image_${randomValueForId}`}>Zdjęcie profilowe</label>\n                        <input required={true} type=\"file\" className=\"form-control-file\" id={`image_${randomValueForId}`}\n                            accept=\"image/png\" onChange={e => {\n                                const file = e.target.files[0];\n\n                                if(file.type !== \"image/png\") {\n                                    this.setState({errorMessage: `Zły format zdjęcia profilowego (${file.type} zamiast png)`});\n                                    e.target.value = \"\";\n                                    return;\n                                }\n\n                                const fileReader = new FileReader();\n                                fileReader.readAsBinaryString(file);\n                                fileReader.onload = () => this.setState({base64Image: btoa(fileReader.result)});\n                            }}/>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\">Rejestracja</button>\n\n                    {this.state.errorMessage !== null &&\n                        <div>\n                            <br />\n                            <br />\n                            <DismissableAlert key={Math.random()} color=\"danger\" timeout={3} toggle={() => this.setState({errorMessage: null})}>\n                                {this.state.errorMessage}\n                            </DismissableAlert>\n                        </div>\n                    }\n                    {this.state.successMessage !== null &&\n                        <div>\n                            <br />\n                            <br />\n                            <DismissableAlert key={Math.random()} color=\"success\" timeout={3} toggle={() => this.setState({successMessage: null})}>\n                                {this.state.successMessage}\n                            </DismissableAlert>\n                        </div>\n                    }\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default AccountRegistrationForm;\n"]},"metadata":{},"sourceType":"module"}